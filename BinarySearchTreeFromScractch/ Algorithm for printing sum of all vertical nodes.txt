/* Algorithm for printing sum of all vertical nodes
binary tree 40   20,60    10,30,50,70    5,15,25,35,45,55,65,75  

output : 5,10,105,120,215,70,75
 */

public static int [] array;

public void printVerticalNodes(BinarySearchTreeNode root){
	if(root==null)
		return;
	int depth = getDepth(root);
	int size  = (2*depth)-1;
	array= new int[size];
	array[((size-1)/2)]=((Integer)(root.getItem()));
		array= printVerticalNodes(array,root,((size-1)/2));
	for(int i=0;i<size;i++)
		System.out.println(array[i]);
}

public int[] printVerticalNodes(int[]array, BinarySearchTreeNode root, int index){	
	if(root==null)
		return array;
	array=printVerticalNodes(array,root.getLeft(),(index-1));
	if(root.getLeft()!=null){
		array[(index-1)]=((Integer)(root.getLeft().getItem()))+array[(index-1)];
		}
	if(root.getRight()!=null){
		array[(index+1)]=((Integer)(root.getRight().getItem()))+array[(index+1)];
		}
		
	array=printVerticalNodes(array,root.getRight(),(index+1));
	return array;
}