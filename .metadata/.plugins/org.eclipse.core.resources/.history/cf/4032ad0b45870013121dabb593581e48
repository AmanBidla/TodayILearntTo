import java.util.Comparator;
import java.util.PriorityQueue;


public class RocketFuel {

	static class Input {
		
		int i;
		public Input(int i) {
			super();
			this.i = i;
		}
		
		public Input(){
			
		}
		
	}
	
	static class LessInput  implements Comparable<LessInput> {
		
		  
		 private Input im;
		 
		 public LessInput(Input i){
			 this.im=i;
					 
		 }

		@Override
		public int compareTo(LessInput o) {
			if(im.i<o.im.i) return 1;
			else if(im.i>o.im.i) return -1;
			return 0;
		}
		
		 
 	}
	
	static class MoreInput implements Comparable<MoreInput>{
		
		private Input im;
		
		public MoreInput(Input i){
			this.im = i;
		}
		

		@Override
		public int compareTo(MoreInput o) {
			if(im.i<o.im.i) return -1;
			else if(im.i>o.im.i) return 1;
			return 0;
		}
	}
	
	private static PriorityQueue<LessInput> pqLess = new PriorityQueue<LessInput>();
	private static PriorityQueue<MoreInput> pqMore = new PriorityQueue<MoreInput>(); 
	
	
	public static void main(String[] args) {
		
		Input i1 = new Input(10);
		Input i2 = new Input(20);
		Input i3 = new Input(30);
		Input i4 = new Input(40);
		
		LessInput l1 = new LessInput(i1);
		LessInput l2 = new LessInput(i2);
		LessInput l3 = new LessInput(i3);
		LessInput l4 = new LessInput(i4);
		
		MoreInput m1 = new MoreInput(i1);
		MoreInput m2 = new MoreInput(i2);
		MoreInput m3 = new MoreInput(i3);
		MoreInput m4 = new MoreInput(i4);
		
		
		
		pqLess.add(l1);
		pqLess.add(l2);
		pqLess.add(l3);
		pqLess.add(l4);
		
		
		pqMore.add(m1);
		pqMore.add(m2);
		pqMore.add(m3);
		pqMore.add(m4);
		
		
		System.out.println(pqLess.peek().i.i);
		System.out.println(pqMore.peek().i.i);
		 
	}
	
	
	
	
}
