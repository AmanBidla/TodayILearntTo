package com.text.blocking;

import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class TextBlocking {
	
	private static String regex = "[a-z]+";
	private static StringBuilder[] NORESULT ;
	
	private static StringBuilder [] blocking( StringBuilder[] text){
		
		StringBuilder [] st; 
		
		if(validate(text)){
			
			StringBuilder [] words = text;
		
			
			int wordLength = words[0].length();
			st = new StringBuilder[wordLength];
			System.out.println("word lengths "+wordLength+" words "+words.length);
			for(int i=0;i<words.length;i++){
				for(int j=0;j<wordLength;j++){
					System.out.println(words[i].charAt(j));
					st[j].append(words[i].charAt(j));
				}
			}
			
			return st;
			
			
		}else{
			return NORESULT;
		}
		
		
	}
	

	public static void main(String[] args) {
		StringBuilder [] buf = new StringBuilder[args.length];
		for(int i=0;i<args.length;i++){
			buf[i].append(args[i]);
		}
		StringBuilder[] ouput=blocking(buf);
		for(int i=0;i<ouput.length;i++){
			System.out.println(ouput[i]);
		}
		
	}
	
	private static boolean validate(final StringBuilder text){
		
		
		
		/*text will contain between 1 and 50 elements, inclusive*/
		String [] words= text.split(" ");
		int N = words.length;
		int wordLength = words[0].length();
		if(N<1 ||N>50) return false;
		
		/*Each element of text will contain between 1 and 50 characters, inclusive. */
		/*Each element of text will contain the same number of characters.*/
		/*Each character in text will be an uppercase letter ([A-Z]).*/
		
		for(String word:words){
			if(word.length()<1 || word.length()>50) return false;
			Pattern pat = Pattern.compile(regex);
			Matcher mat = pat.matcher(word);
			if(mat.matches()) return false;
			
			if(word.length()!=wordLength) return false;
		}
		
		return true;
		
	
		
		
		
		
		
		
	}

}
